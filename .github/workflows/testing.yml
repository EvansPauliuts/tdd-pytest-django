name: testing

on: [push]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        poetry-version: ['1.1.14']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python --version

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --system

      - name: Create .env file
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
        run: |
          touch .env
          echo SECRET_KEY="$SECRET_KEY" >> .env
          echo DEBUG="$DEBUG" >> .env
          echo ALLOWED_HOSTS="$ALLOWED_HOSTS" >> .env
        shell: bash

      - name: Run black
        run: black .

      - name: Run tests
        run: |
          pipenv run pytest -v -s --durations=0

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2

      - name: Upload coverage reports to Codecov
        env:
          SUPER_SECRET: ${{ secrets.CODECOV_TOKEN }}
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t "%SUPER_SECRET%"
